# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native-permissions/scripts/setup.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, '14.0'

prepare_react_native_project!

# Setup permissions for necessary modules
setup_permissions([
  'Camera',
  'Contacts',
  'MediaLibrary',
  'Microphone',
  'Notifications',
  'PhotoLibrary',
])

# Configure linkage for frameworks
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'vprofile' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => true, # Enable Hermes
  )

  target 'vprofileTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
        config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
      end
    end

    # React Native post-installation handling
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )
  end
end
